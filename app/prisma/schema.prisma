// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  email           String         @unique
  username        String         @unique
  password        String
  createdAt       DateTime       @default(now())
  updateAt        DateTime       @updatedAt
  profilepic      String?        @default("")
  bio             String?        @default("")
  name            String?        @default("")
  isVerified      Boolean        @default(false)
  conversationIds Int[]
  conversations   Conversation[]
  messages        Messages[]
  FriendsBy       User[]         @relation("UserFollows")
  Friends         User[]         @relation("UserFollows")
  FriendReq       FriendReq[]
}

model Conversation {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  participants   User[]     
  participantIds String[]   
  messageIds     Int[]      
  messages       Messages[]
}

model Messages {
  id             Int          @id @default(autoincrement())
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  senderId       String
  sender         User         @relation(fields: [senderId], references: [username])
  body           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}



model FriendReq{
  
  senderId        String
  sender          User       @relation(fields: [senderId], references: [username])
  receiverId      String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  status          Status     @default(SENT)
  @@id([senderId, receiverId])
}





enum Status{
  SENT
  ACCEPTED
  DECLINED

}